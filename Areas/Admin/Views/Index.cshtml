@using i7MEDIA.Plugin.Widgets.Registry
@using i7MEDIA.Plugin.Widgets.Registry.Models.ViewModels
@model AdminViewModel

@{
    var version = Model.PluginVersion;
    var settingsRoute = Url.RouteUrl(AdminDefaults.Settings);
    var registryRoute = Url.RouteUrl(AdminDefaults.Registry);
    var TypeRoute = Url.RouteUrl(AdminDefaults.RegistryType);
    var consultantRoute = Url.RouteUrl(AdminDefaults.Consultant);
    var deleteItemRoute = Url.RouteUrl(AdminDefaults.RegistryItem);
    var shippingRoute = Url.RouteUrl(AdminDefaults.RegistryShipping);
    var reportRoute = Url.RouteUrl(AdminDefaults.RegistryAdminReport);
    var registryOrdersRoute = Url.RouteUrl(AdminDefaults.RegistryOrders);
    var itemReportRoute = Url.RouteUrl(AdminDefaults.RegistryAdminItemReport);
    var orderReportRoute = Url.RouteUrl(AdminDefaults.RegistryAdminOrderReport);
    var externalOrder = Url.RouteUrl(AdminDefaults.RegistryAdminExternalOrder);
}

<!link rel="stylesheet" href="/Plugins/i7MEDIA.Plugin.Widgets.Registry/Areas/Admin/Styles/index.css?v=@version" />

<!script type="module">
    import {init} from '/Plugins/i7MEDIA.Plugin.Widgets.Registry/Areas/Admin/Scripts/index.js?v=@version';

    init('@registryRoute', '@consultantRoute', '@TypeRoute', '@shippingRoute', '@deleteItemRoute', '@reportRoute', '@orderReportRoute', '@itemReportRoute', '@externalOrder', '@registryOrdersRoute', '@settingsRoute');
</!script>

<header data-registry-admin-header>
    <nav>
        <button type="button">Search Registries</button>
        <button type="button">Consultants</button>
        <button type="button">Types</button>
        <button type="button" data-nav-shipping>Collection Method</button>
        <button type="button">Settings</button>
    </nav>
</header>
<main data-registry-admin-main>

</main>
<footer data-registry-admin-footer hidden>
    <button class="btn btn-success" type="button">Save</button>
    <button class="btn btn-danger" type="button">Cancel</button>
</footer>

@await Html.PartialAsync("_RegistryNotification.cshtml")