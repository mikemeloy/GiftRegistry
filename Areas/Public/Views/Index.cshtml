@using i7MEDIA.Plugin.Widgets.Registry
@model i7MEDIA.Plugin.Widgets.Registry.Models.PluginModel

@{
    Layout = "_Root";

    var version = Model.PluginVersion;
    var registrySearchRoute = Url.RouteUrl(RegistryDefaults.List);
    var baseRoute = Url.RouteUrl(RegistryDefaults.Index);
    var insertRoute = Url.RouteUrl(RegistryDefaults.Insert);
    var deleteRoute = Url.RouteUrl(RegistryDefaults.Delete);
}

<!link rel="stylesheet" href="/Plugins/i7MEDIA.Plugin.Widgets.Registry/Areas/Public/Styles/index.css?v=@version" />

<!script type="module">
    import {init} from '/Plugins/i7MEDIA.Plugin.Widgets.Registry/Areas/Public/Scripts/index.js?v=@version';

    init('@registrySearchRoute', '@insertRoute', '@deleteRoute');
</!script>

<div data-registry class="registry-wrapper round">
    <header>
        <form data-search>
            <input type="text" autocomplete="off" placeholder="Search Registries..." aria-label="Search registries">
        </form>
        <button data-add type="button">Create New Registry</button>
    </header>
    <section data-result>
    </section>
    @await Html.PartialAsync("_AddDialog.cshtml")
    @await Html.PartialAsync("_RegistryFilter.cshtml")
</div>
@await Html.PartialAsync("_Loading.cshtml")